apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: apps
  namespace: argocd
spec:
  project: default
  destination:
    namespace: argo
    server: 'https://kubernetes.default.svc'
  source:
    path: apps
    repoURL: 'https://github.com/waylonwalker/learn-rollouts'
    targetRevision: HEAD
  syncPolicy:
    automated:
      prune: true

---

# create argo-rollouts namespace
apiVersion: v1
kind: Namespace
metadata:
  name: argo-rollouts

---

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: rollouts
  namespace: argocd
spec:
  project: default
  destination:
    namespace: argo-rollouts
    server: 'https://kubernetes.default.svc'
  source:
    path: rollouts-app
    repoURL: 'https://github.com/waylonwalker/learn-rollouts'
    targetRevision: HEAD
  syncPolicy:
    automated:
      prune: true

---

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: hello-world
  namespace: argocd
spec:
  project: default
  destination:
    namespace: hello-world
    server: 'https://kubernetes.default.svc'
  source:
    path: hello-world/deployments
    repoURL: 'https://github.com/waylonwalker/learn-rollouts'
    targetRevision: HEAD
  syncPolicy:
    automated:
      prune: true

---

apiVersion: v1
kind: Service
metadata:
  name: argo-nodeport
  namespace: argocd
spec:
  type: NodePort
  ports:
    - port: 443 # The port you want to expose
      targetPort: 8080 # The port the service is listening on internally
      nodePort: 30000 # Choose a NodePort value within the allowed range (30000-32767)
  selector:
    app: argocd-server # Selector to match the pods of the original service
